version: "3.11"

services:
  lexyserver:
    build:
      context: ./
      dockerfile: docker/server/Dockerfile
    hostname: lexy_server
    container_name: lexy-server
    depends_on:
      - db_postgres
    ports:
      - "9900:9900"
    env_file:
      - .env
    environment:
      - DOCKER=true
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lexy
      - POSTGRES_HOST=db_postgres
      - POSTGRES_TEST_DB=lexy_tests
      - CELERY_BROKER_URL=amqp://guest:guest@queue:5672//
      - CELERY_RESULT_BACKEND=db+postgresql://postgres:postgres@db_postgres/lexy
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PIPELINE_DIR=/home/app/pipelines
      - PYTHONPATH=/home/app:/home/app/pipelines
      - GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/gcp_credentials
    volumes:
      - ./:/home/app
      - ${PIPELINE_DIR:-./pipelines}:/home/app/pipelines
      # Uncomment the following line if you are using AWS credentials
      - $HOME/.aws/credentials:/root/.aws/credentials:ro
      # Uncomment the following line if you are using Google Cloud with application-default credentials
      #- $HOME/.config/gcloud:/root/.config/gcloud:ro
    secrets:
      - gcp_credentials
    networks:
      - lexy-net

  db_postgres:
    hostname: db_postgres
    container_name: lexy-postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lexy
      - POSTGRES_TEST_DB=lexy_tests
    ports:
      - "5432:5432"
    build:
        context: ./
        dockerfile: docker/postgres/Dockerfile
    volumes:
      - db-postgres:/var/lib/postgresql/data
    networks:
      - lexy-net

  queue:
    image: rabbitmq:3.9.10-management
    hostname: queue
    container_name: lexy-queue
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - lexy-net

  flower:
    image: mher/flower
    hostname: flower
    container_name: lexy-flower
    restart: always
    ports:
      - "5556:5555"
    command: celery --broker=amqp://guest:guest@queue:5672// flower -A lexy.main.celery --broker_api=http://guest:guest@queue:15672/api/vhost
    depends_on:
      - lexyserver
      - queue
      - lexyworker
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@queue:5672//
      - CELERY_RESULT_BACKEND=db+postgresql://postgres:postgres@db_postgres/lexy
      - CELERY_BROKER_API_URL=http://guest:guest@queue:15672/api/vhost
      - C_FORCE_ROOT=true
      - FLOWER_UNAUTHENTICATED_API=true
    networks:
      - lexy-net

  lexyworker:
    build:
      context: ./
      dockerfile: docker/worker/Dockerfile
    hostname: celeryworker
    container_name: lexy-celeryworker
    command: watchmedo auto-restart --directory /home/app/lexy/transformers/ --directory /home/app/pipelines/ --recursive --pattern '*.py' -- celery -A lexy.main.celery worker --loglevel=info -Q celery -c 4
    depends_on:
      - lexyserver
      - queue
    restart: always
    env_file:
      - .env
    environment:
      - DOCKER=true
      - CELERY_BROKER_URL=amqp://guest:guest@queue:5672//
      - CELERY_BROKER_API_URL=http://guest:guest@queue:15672/api/vhost
      - CELERY_RESULT_BACKEND=db+postgresql://postgres:postgres@db_postgres/lexy
      - C_FORCE_ROOT=true
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lexy
      - POSTGRES_HOST=db_postgres
      - PIPELINE_DIR=/home/app/pipelines
      - PYTHONPATH=/home/app:/home/app/pipelines
      # Unset GOOGLE_APPLICATION_CREDENTIALS for the celery worker
      - GOOGLE_APPLICATION_CREDENTIALS=
    volumes:
      - ./:/home/app
      - ${PIPELINE_DIR:-./pipelines}:/home/app/pipelines
    networks:
      - lexy-net

volumes:
  db-postgres:
    driver: local

secrets:
  # Google Cloud service account credentials
  gcp_credentials:
    file: ${GOOGLE_APPLICATION_CREDENTIALS:-null}

networks:
  lexy-net:
    external: false
