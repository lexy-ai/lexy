name: Build and Push Docker Images

on:
  push:
    branches:
#      - main
      - rs/test-gh-actions

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_LEXY_SERVER: ghcr.io/lexy-ai/lexy/lexy-server
  IMAGE_NAME_LEXY_WORKER: ghcr.io/lexy-ai/lexy/lexy-worker
  IMAGE_NAME_LEXY_POSTGRES: ghcr.io/lexy-ai/lexy/lexy-postgres

jobs:
  build-and-push:

    runs-on: ubuntu-latest
    strategy:
      # fail-fast: false
      matrix:
        platform:
          - linux/arm64
          - linux/amd64
          # - linux/arm/v6
          # - linux/arm/v7
          # - linux/arm64
    
    permissions:
      contents: read
      packages: write
    
    steps:

      - name: List huge unnecessary tools folder
        run: tree -L 2 /opt/hostedtoolcache
        
      - name: Size of huge unnecessary tools folder
        run: du -sh /opt/hostedtoolcache/*/* | sort -h -r

      - name: Free disk space
        run: df -h

      - name: Other stuff
        run: |
          which python
          which python3
          which pip
          python --version
        
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      # - name: Delete huge unnecessary tools folder
      #   run: |
      #     rm -rf /opt/hostedtoolcache/CodeQL
      #     df -h

      # - name: Check build context
      #   run: |
      #     pwd
      #     ls -lah ./
      #     du -sh * | sort -h -r

      # - name: Size of py packages
      #   run: |
      #     export PYSITE=$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
      #     du -sh $PYSITE/* | sort -h -r
      -
        name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV 

      - name: Checkout code
        uses: actions/checkout@v4

        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Metadata for all
        id: meta
        uses: docker/metadata-action@v5
        with:
          # images: ${{ env.IMAGE_NAME_LEXY_SERVER }}
          images: |
            ${{ env.IMAGE_NAME_LEXY_SERVER }}
            ${{ env.IMAGE_NAME_LEXY_WORKER }}
            ${{ env.IMAGE_NAME_LEXY_POSTGRES }}
          labels: |
            org.opencontainers.image.vendor=Lexy AI
          flavor: |
            latest=auto

      - name: Metadata for Lexy server
        id: meta_server
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME_LEXY_SERVER }}
          labels: |
            org.opencontainers.image.title=LexyServer
            org.opencontainers.image.description=Lexy Server 
            org.opencontainers.image.vendor=Lexy AI
          flavor: |
            latest=auto
          # tags: |
          #   type=ref,value=latest
          #   type=ref,event=branch
          #   type=ref,event=pr
          #   type=sha
          #   type=semver,pattern={{version}}

      # - name: Build and push Lexy Server image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./
      #     platforms: ${{ matrix.platform }}
      #     file: ./docker/server/Dockerfile
      #     build-args: ENVIRONMENT=development
      #     # labels: |
      #     #   org.opencontainers.image.source=https://github.com/lexy-ai/lexy
      #     #   org.opencontainers.image.title=Lexy Server
      #     #   ${{ steps.meta_server.outputs.labels }}
      #     push: true
      #     # tags: ${{ env.IMAGE_NAME_LEXY_SERVER }}:${{ matrix.platform }}
      #     tags: ${{ steps.meta_server.outputs.tags }}
      #     labels: ${{ steps.meta_server.outputs.labels }}

      - name: Build and push Lexy Server by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./
          platforms: ${{ matrix.platform }}
          file: ./docker/server/Dockerfile
          build-args: ENVIRONMENT=development
          labels: ${{ steps.meta_server.outputs.labels }}
          outputs: type=image,name=${{ env.IMAGE_NAME_LEXY_SERVER }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
      -
        name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      # - name: Size of py packages after lexy server
      #   run: |
      #     export PYSITE=$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
      #     du -sh $PYSITE/* | sort -h -r

      - name: Metadata for Lexy worker
        id: meta_worker
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME_LEXY_WORKER }}
          
      - name: Build and push Lexy Worker image
        uses: docker/build-push-action@v5
        with:
          context: ./
          platforms: ${{ matrix.platform }}
          file: ./docker/worker/Dockerfile
          build-args: ENVIRONMENT=development
          # labels: |
          #   org.opencontainers.image.source=https://github.com/lexy-ai/lexy
          #   org.opencontainers.image.title=Lexy Worker
          push: true
          tags: ${{ env.IMAGE_NAME_LEXY_WORKER }}:${{ env.PLATFORM_PAIR }}
          # tags: ${{ steps.meta_worker.outputs.tags }}
          labels: ${{ steps.meta_worker.outputs.labels }}

      - name: Metadata for Lexy postgres
        id: meta_postgres
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME_LEXY_POSTGRES }}

      - name: Build and push Lexy Postgres image
        uses: docker/build-push-action@v5
        with:
          context: ./
          platforms: ${{ matrix.platform }}
          file: ./docker/postgres/Dockerfile
          push: true
          # tags: ${{ env.IMAGE_NAME_LEXY_POSTGRES }}:latest
          tags: ${{ steps.meta_postgres.outputs.tags }}
          labels: ${{ steps.meta_postgres.outputs.labels }}


  merge:
    runs-on: ubuntu-latest
    needs:
      - build-and-push
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # -
      #   name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ env.REGISTRY_IMAGE }}
      - 
        name: Docker meta for Lexy server
        id: meta_lxs
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME_LEXY_SERVER }}
          # labels: |
          #   org.opencontainers.image.title=LexyServer
          #   org.opencontainers.image.description=Lexy Server 
          #   org.opencontainers.image.vendor=Lexy AI
          # flavor: |
          #   latest=auto
      -
        name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE_NAME_LEXY_SERVER }}@sha256:%s ' *)          
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME_LEXY_SERVER }}:${{ steps.meta_lxs.outputs.version }}    
