name: Build Python Package and Publish to PyPI

on:
  push:
    branches:
      - rs/publish-to-pypi
    tags:
      - v*

env:
  POETRY_VERSION: "1.8.2"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    environment:
      name: release
      url: https://test.pypi.org/p/lexy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip 
          pip install "poetry==$POETRY_VERSION"
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: "poetry"
# TODO: Compare versions for lexy and lexy-py
#      - name: Compare pyproject version with tag
#        run: |
#          TAG_VERSION=${GITHUB_REF#refs/tags/}
#          if [ "$TAG_VERSION" != "v$(poetry version --short)" ]; then
#            echo "Tag version $TAG_VERSION does not match the project version $(poetry version --short)"
#            exit 1
#          fi
      - name: Build lexy package
        run: |
          pwd
          poetry build
      - name: Publish lexy package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/
      - name: Build lexy-py package
        run: |
          cd sdk-python
          pwd
          poetry build
          ls -lah
          ls -lah dist
      - name: Publish lexy-py package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/
