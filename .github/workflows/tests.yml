name: Run tests

on:
  push:
    branches:
      - rs/run-tests-on-gh
  pull_request:
    branches:
      - main

permissions:
    contents: read

env:
  GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_credentials.json
  DEFAULT_STORAGE_SERVICE: s3
  DEFAULT_STORAGE_BUCKET: rs-lexy-ai-dev-deployments
  S3_TEST_BUCKET: rs-lexy-ai-dev-deployments
  GCS_TEST_BUCKET: rs-lexy-ai-gcs-dev-deployments

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        run: df -h

      - name: List huge unnecessary tools folder
        run: |
          tree -L 2 /opt/hostedtoolcache
          du -sh /opt/hostedtoolcache/*/* | sort -h -r

      - name: Delete huge unnecessary tools folder
        run: |
          rm -rf /opt/hostedtoolcache
          df -h

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check build context
        run: |
          pwd
          ls -lah .
          tree -L 2 .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

#      - name: Build server image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: docker/server/Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: false

      - name: Check env
        run: env

#      - name: Authenticate with Google Cloud
#        uses: google-github-actions/auth@v2
#        with:
#          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Check env again
        run: env

      - name: Create Google Cloud credentials file
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          ls -lah ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Create .env files
        run: |
          touch .env
          touch .env.test
          echo "DEFAULT_STORAGE_SERVICE=${{ env.DEFAULT_STORAGE_SERVICE }}" >> .env.test
          echo "DEFAULT_STORAGE_BUCKET=${{ env.DEFAULT_STORAGE_BUCKET }}" >> .env.test
          echo "S3_TEST_BUCKET=${{ env.S3_TEST_BUCKET }}" >> .env.test
          echo "GCS_TEST_BUCKET=${{ env.GCS_TEST_BUCKET }}" >> .env.test
          echo "PIPELINE_DIR=./pipelines" >> .env.test
          # echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env.test

      - name: Check docker compose config
        run: |
          docker compose -f docker-compose.yaml -f docker-compose.test.yaml config

      - name: Build the stack
        run: |
          docker compose -f docker-compose.yaml -f docker-compose.test.yaml config
          docker compose -f docker-compose.yaml -f docker-compose.test.yaml up --build -d
          docker compose -f docker-compose.yaml -f docker-compose.test.yaml ps

      - name: Run server tests
        env:
          PYTEST_ADDOPTS: "--color=yes"
        run: |
          docker compose -f docker-compose.yaml -f docker-compose.test.yaml exec -it lexyserver pytest -s lexy_tests

      - name: Run client tests
        env:
          PYTEST_ADDOPTS: "--color=yes"
        run: |
          docker compose -f docker-compose.yaml -f docker-compose.test.yaml exec -it lexyserver pytest -s sdk-python

      - name: Delete Google Cloud credentials file
        if: always()
        run: |
          ls -lah ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          rm -f ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Tear down the stack
        if: always()
        run: |
          docker compose -f docker-compose.yaml -f docker-compose.test.yaml down
